---
- name: Verify changing Deployment
  hosts: docker-debug-test-runner
  vars:
    version: green

  roles:
    - set-namespace
    - kube-resource

  tasks:
    - name: find ConfigMaps
      k8s_facts:
        kind: ConfigMap
        namespace: "{{ kube_resource_namespace }}"
      register: kube_resource_verify_configmaps

    - name: check that all ConfigMaps have two owners
      assert:
        that:
          "{{ item.metadata.ownerReferences | length == 2 }}"
      loop: "{{ kube_resource_verify_configmaps.resources }}"

- name: Verify changing ConfigMaps only
  hosts: docker-debug-test-runner
  vars:
    version: green
    changeable: v2

  roles:
    - set-namespace
    - kube-resource

  tasks:
    - name: find env ConfigMaps
      k8s_facts:
        kind: ConfigMap
        namespace: "{{ kube_resource_namespace }}"
        label_selectors:
          - "{{ kube_resource_prefix_label }} = {{ kube_resource_name }}-env"
      register: kube_resource_verify_configmaps

    - name: check that all ConfigMaps have two owners XOR are owned by latest replicaset
      assert:
        that:
          - >-
            {{ (item.metadata.ownerReferences | length == 2 and
                item.metadata.ownerReferences[0].name != kube_resource_current_replicaset and
                item.metadata.ownerReferences[1].name != kube_resource_current_replicaset) or
               (item.metadata.ownerReferences | length == 1 and
                item.metadata.ownerReferences[0].name == kube_resource_current_replicaset) }}
      loop: "{{ kube_resource_verify_configmaps.resources }}"

- name: Show that deleting Deployment deletes ConfigMaps and Secrets
  hosts: docker-debug-test-runner

  roles:
    - set-namespace

  tasks:
    - name: remove Deployment
      k8s:
        kind: Deployment
        api_version: "{{ kube_resource_deployments_api }}"
        name: "{{ kube_resource_name }}"
        namespace: "{{ kube_resource_namespace }}"
        state: absent

    - name: find ConfigMaps
      k8s_facts:
        kind: ConfigMap
        namespace: "{{ kube_resource_namespace }}"
      register: kube_resource_verify_configmaps

    - name: check that there are no ConfigMaps remaining
      assert:
        that:
          - not kube_resource_verify_configmaps.resources
